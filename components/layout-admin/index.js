/* eslint-disable @next/next/no-img-element */
/* This example requires Tailwind CSS v2.0+ */
import { Loading } from "@nextui-org/react";
import { collection, getDocs, orderBy, query } from "firebase/firestore";
import Image from "next/image";
import Link from "next/link";
import { useEffect, useRef, useState } from "react";
import { Toaster } from "react-hot-toast";
import protectAdmin from "../../protect/protect-admin";
import berita from "../../public/berita.svg";
import editprofile from "../../public/editprofile.svg";
import home from "../../public/home.svg";
import keluar from "../../public/keluar.svg";
import pengaduan from "../../public/pengaduan.svg";
import tambahberita from "../../public/tambahberita.svg";
import users from "../../public/users.svg";
import { db } from "../../server/firebaseSDK";
import CardProfile from "./card-profile";
import Head from "next/head";
const LayoutAdmin = ({ children }) => {
  const navigation = [
    { name: "Beranda", icon: home, href: "/admin" },
    { name: "Tambah Berita", icon: tambahberita, href: "/admin/tambah-berita" },
    { name: "Ganti Header", icon: editprofile, href: "/admin/ganti-header" },
    { name: "Daftar Pengguna", icon: users, href: "/admin/users" },
    { name: "Keluar", icon: keluar, href: "/" },
  ];
  const [isLoading, setIsloading] = useState(true);
  const Beritasnapshot = useRef(null);
  const Pengaduansnapshot = useRef(null);
  const Userssnapshot = useRef(null);
  const getDataBerita = async () => {
    const querySnapshot = query(
      collection(db, "berita"),
      orderBy("tanggal", "desc")
    );
    const gettt = await getDocs(querySnapshot);
    Beritasnapshot.current = gettt.docs;
    setTimeout(() => {
      setIsloading(false);
    }, 1000);
  };
  const getDataPengaduan = async () => {
    const querySnapshot = query(
      collection(db, "pengaduan"),
      orderBy("tanggal", "desc")
    );
    const gettt = await getDocs(querySnapshot);
    Pengaduansnapshot.current = gettt.docs;
    setTimeout(() => {
      setIsloading(false);
    }, 1000);
  };
  const getDataUsers = async () => {
    const querySnapshot = query(
      collection(db, "users"),
      orderBy("tanggal", "desc")
    );
    const gettt = await getDocs(querySnapshot);
    Userssnapshot.current = gettt.docs;
    setTimeout(() => {
      setIsloading(false);
    }, 1000);
  };

  useEffect(() => {
    getDataBerita();
    getDataPengaduan();
    getDataUsers();
  }, []);
  return (
    <>
      <Toaster />
      <Head>
        <title>Admin - BPTD III SUMBAR</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/logo.png" />
      </Head>
      {/* Mobile */}
      <div className="md:hidden w-full py-2 m-auto items-center bottom-1 fixed">
        <div className="shadow-xl mx-5 p-5 flex justify-between rounded-lg">
          {navigation.map((e, i) => (
            <Link className="flex justify-around" key={i} href={e.href}>
              <Image src={e.icon} width={30} alt={"#"} />
            </Link>
          ))}
        </div>
      </div>
      {/* Destop */}
      <div className="hidden outline-1 border-x-2 md:flex md:w-64 md:flex-col md:fixed md:inset-y-0">
        <div className="flex-1 flex flex-col min-h-0 shadow-xl">
          <div className="flex-1 flex flex-col pt-5 pb-4 overflow-y-auto ">
            <Link
              href={"/"}
              className="pt-4 pb-8 text-center font-bold text-xl"
            >
              Admin
            </Link>
            <hr className="pb-8 mx-4" />
            <nav className="flex-1 text-sm flex flex-col px-2 space-y-1 ">
              {navigation.map((e, i) => (
                <div key={i} div className="flex gap-2 mx-2">
                  <Image src={e.icon} alt={e.name} />
                  <Link
                    className="hover:bg-slate-900 hover:text-white py-1 flex items-center px-2 rounded-lg"
                    href={e.href}
                  >
                    {e.name}
                  </Link>
                </div>
              ))}
            </nav>
          </div>
          <CardProfile />
        </div>
      </div>
      <div className="pl-0 md:pl-64 flex flex-col flex-1">
        <div>
          <div className="flex w-full justify-evenly py-5 lg:py-7 rounded-lg shadow-xl">
            <div className="flex items-center gap-2">
              <Image src={berita} width={40} alt="#" />
              <div className="text-center text-sm md:text-base">
                <h1 className="font-semibold">
                  {isLoading ? (
                    <Loading color={"currentColor"} type="points" size="sm" />
                  ) : (
                    Object.values(Beritasnapshot.current).length
                  )}
                </h1>
                <h1 className="font-medium text-sm">Berita</h1>
              </div>
            </div>
            <div className="flex items-center gap-2">
              <Image src={pengaduan} width={40} alt="#" />
              <div className="text-center text-sm md:text-base">
                <h1 className="font-semibold">
                  {isLoading ? (
                    <Loading color={"currentColor"} type="points" size="sm" />
                  ) : (
                    Object.values(Pengaduansnapshot.current).length
                  )}
                </h1>
                <h1 className="font-medium text-sm">Pengaduan</h1>
              </div>
            </div>
            <div className="flex items-center gap-2">
              <Image src={users} width={40} alt="#" />
              <div className="text-center text-sm md:text-base">
                <h1 className="font-semibold">
                  {isLoading ? (
                    <Loading color={"currentColor"} type="points" size="sm" />
                  ) : (
                    Object.values(Userssnapshot.current).length
                  )}
                </h1>
                <h1 className="font-medium text-sm">User</h1>
              </div>
            </div>
          </div>
          <div>{children}</div>
        </div>
      </div>
    </>
  );
};

export default protectAdmin(LayoutAdmin);
