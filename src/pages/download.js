/* eslint-disable @next/next/no-img-element */
import { Loading, Tooltip } from "@nextui-org/react";
import dayjs from "dayjs";
import "dayjs/locale/id";
import relativeTime from "dayjs/plugin/relativeTime";
import {
  collection,
  doc,
  getDocs,
  orderBy,
  query,
  updateDoc,
} from "firebase/firestore";
import Head from "next/head";
import Layout from "../components/layout";
import { useRouter } from "next/router";
import { useState, useRef, useEffect } from "react";
import styles from "../styles/Home.module.css";
import { db } from "../server/firebaseSDK";
export default function Test() {
  const route = useRouter();
  dayjs.locale("id");
  dayjs.extend(relativeTime);
  const snapshot = useRef(null);
  const [isLoading, setIsloading] = useState(true);
  const getDBFromFirestore = async () => {
    const querySnapshot = query(
      collection(db, "download"),
      orderBy("tanggal", "desc")
    );
    const gettt = await getDocs(querySnapshot);
    snapshot.current = gettt.docs;
    setTimeout(() => {
      setIsloading(false);
    }, 1000);
  };

  useEffect(() => {
    getDBFromFirestore();
  }, []);

  if (isLoading) {
    return (
      <div className={styles.main}>
        <Loading color={"currentColor"} />
      </div>
    );
  } else {
    const post = snapshot.current;
    const download = Object.values(post);
    return (
      <Layout>
        <Head>
          <title>Download - BPTD III Sumbar</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/logo.png" />
        </Head>

        <div className="flex flex-col my-10 mx-10">
          <div className="-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8">
            <div className="py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8">
              <div className="shadow overflow-hidden border-b border-gray-200 sm:rounded-lg">
                <table className="min-w-full divide-y divide-gray-200">
                  <thead className="bg-gray-50">
                    <tr>
                      <th
                        scope="col"
                        className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                      >
                        Dokumen
                      </th>

                      <th
                        scope="col"
                        className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                      >
                        Tanggal
                      </th>
                      <th
                        scope="col"
                        className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                      ></th>
                      <th scope="col" className="relative px-6 py-3">
                        <span className="sr-only">Edit</span>
                      </th>
                    </tr>
                  </thead>
                  <tbody>
                    {download.map((e, i) => {
                      const data = e.data();
                      return (
                        <tr key={i} className={"hover:bg-slate-200"}>
                          <td className="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                            {`${data.dokumen}`.slice(0, 80)}
                            {`${data.dokumen}`.length > 80 ? "..." : ""}
                          </td>
                          <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                            <Tooltip content={data.tanggal_download}>
                              {dayjs(data.tanggal).fromNow()}
                            </Tooltip>
                          </td>

                          <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500 text-center">
                            {data.didownload + " kali"}
                          </td>
                          <td className="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                            <a
                              href={`${data.url}`}
                              onClick={async () => {
                                const frankDocRef = doc(
                                  db,
                                  "download",
                                  `${e.id}`
                                );
                                await updateDoc(frankDocRef, {
                                  didownload: data.didownload + 1,
                                });
                              }}
                              target={"_blank"}
                              className="text-slate-900 border px-2 rounded-lg border-slate-900 hover:bg-slate-900 hover:text-white"
                              rel="noreferrer"
                            >
                              Download
                            </a>
                          </td>
                        </tr>
                      );
                    })}
                  </tbody>
                </table>
              </div>
            </div>
          </div>
        </div>
      </Layout>
    );
  }
}
